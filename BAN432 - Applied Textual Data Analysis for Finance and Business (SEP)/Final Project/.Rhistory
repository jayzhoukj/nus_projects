2^3
2**3
# Load required packages
require(edgar)
require(tm)
require(wordcloud)
load("company_index.Rdata")
library(RSelenium)
library(sentimentr)
rD <- rsDriver(port=4444L,browser="chrome",chromever = "77.0.3865.40")
remDr <- rD$client
remDr$setTimeout(type = "page load", milliseconds = 30000)
remDr$navigate("https://www.nuswhispers.com/category/7")
webElem <- remDr$findElement("css", "body")
webElem$sendKeysToElement(list(key = "end"))
for (i in 1:10){
# remDr$executeScript("window.scrollTo(0,document.body.scrollHeight);")
webElem <- remDr$findElement("css", "body")
webElem$sendKeysToElement(list(key = "end"))
}
for (i in 1:10){
# remDr$executeScript("window.scrollTo(0,document.body.scrollHeight);")
webElem <- remDr$findElement("css", "body")
webElem$sendKeysToElement(list(key = "end"))
Sys.sleep(5)
}
for (i in 1:100){
try(
{
DT.post.elem <- remDr$findElement(using = "xpath", paste0('//*[@id="react-root"]/div/div/div/main/div/div/div/div/div/div[2]/div/div/div[2]/section/div/div/div/div[', as.character(i+2),']/div/article/div/div[2]/div[2]/div[2]'))
DT.post <- DT.post.elem$getElementText()
DT.post <- gsub("\n", "", DT.post)
master.dt <- append(master.dt, DT.post)
}
)
}
text.list <- list()
for (i in 1:100){
try(
{
post.elem <- remDr$findElement(using = "xpath", paste0('//*[@id="post-list"]/div[', as.character(i+1),']/div[2]/span'))
post <- post.elem$getElementText()
post <- gsub("\n", "", post)
text.list <- append(text.list, post)
}
)
}
nuswhispers.results <- sentiment_by(unlist(text.list))
print(nuswhispers.results)
View(text.list)
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
head(wiki.text)
ext.links <- gsub('href="(.+)"','\\1', wiki.text)
ext.links
wiki.text <- gsub('href="(.+)"','\\1', wiki.text)
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
dim(wiki.text)
wiki.text <- wiki.text["href" %in% wiki.text]
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
wiki.text <- gsub("href=\"(.+)\"",'\\1', wiki.text)
head(wiki.text)
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
wiki.text <- gsub("^href=\"(.+)\"",'\\1', wiki.text)
head(wiki.text)
wiki.text <- gsub("^href=\"(.+)?\"",'\\1', wiki.text)
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
wiki.text <- gsub("^href=\"(.+)?\"",'\\1', wiki.text)
head(wiki.text)
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
wiki.text <- wiki.text[grepl("^href=\".+\"", wiki.text)]
wiki.text <- readLines("https://en.wikipedia.org/wiki/Margin_classifier")
href.text <- grep(".+/wiki/.+", wiki.text)
href.index <- gregexpr("href=\"/wiki/.+\"", wiki.text)
href.text <- grep(".+/wiki/.+", wiki.text)
href.index <- gregexpr("href=\"/wiki/.+\"", wiki.text)
wiki.text.cleaned <- regmatches(wiki.text[href.text], href.index)
wiki.text[href.text]
source('C:/Users/Kai Jing/Desktop/NUS/Business (Accountancy)/NUS BAC/Sem 3.1/BAN432 - Applied Textual Data Analysis for Business and Finance/Final Project/Final Project.R', echo=TRUE)
source('C:/Users/Kai Jing/Desktop/NUS/Business (Accountancy)/NUS BAC/Sem 3.1/BAN432 - Applied Textual Data Analysis for Business and Finance/Final Project/Final Project.R', echo=TRUE)
Raw.Data$Year
?set
Raw.Data$CIK
